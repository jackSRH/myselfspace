<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mailian.firecontrol.dao.manual.mapper.ManageManualMapper">
    <delete id="deleteDiagramItemByMap" parameterType="map">
        delete from
        t_diagram_item
        <where>
            <if test="dsId != null">
                and ds_id = #{dsId,jdbcType=INTEGER}
            </if>
        </where>
    </delete>

    <select id="selectFacilitiesAlarmByMap" parameterType="java.util.Map" resultMap="com.mailian.firecontrol.dao.auto.mapper.FacilitiesAlarmMapper.BaseResultMap">
        select
        <include refid="com.mailian.firecontrol.dao.auto.mapper.FacilitiesAlarmMapper.Base_Column_List" />
        from t_facilities_alarm
        <where>
            <if test="unitIds != null and unitIds.size() > 0">
                and unit_id in
                <foreach close=")" collection="unitIds" index="i" item="item" open="(" separator=",">
                    #{item,jdbcType=INTEGER}
                </foreach>
            </if>
            <if test="misreport != null">
                and misreport = #{misreport,jdbcType=INTEGER}
            </if>
            <if test="alarmType != null">
                and alarm_type = #{alarmType,jdbcType=INTEGER}
            </if>
            <if test="startDate != null and endDate != null">
                and create_time between  #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
    <select id="selectDiagramStructByAlarmItemId"
            resultMap="com.mailian.firecontrol.dao.auto.mapper.DiagramStructMapper.BaseResultMap">
        select
			p.facilities_id,p.struct_address
		from t_diagram_item t right join t_diagram_struct p
		on t.ds_id = p.id where t.item_id = #{itemId,jdbcType=VARCHAR} and p.unit_id=#{unitId,jdbcType=INTEGER} limit 1
    </select>
    <select id="countUnfinishAlarmNumByType" resultType="java.lang.Integer">
        select count(1) from t_facilities_alarm where alarm_type = #{alaramType,jdbcType=INTEGER} and handle_status != 3
    </select>

    <update id="updateFaAlarmBatch" parameterType="java.util.List">
        <foreach collection="alarmList" item="item" index="index" open="" close="" separator=";">
            update t_facilities_alarm
            <set>
                <if test="item.alarmStatus != null">
                    alarm_status = #{item.alarmStatus,jdbcType=TINYINT},
                </if>
                <if test="item.alarmEndTime != null">
                    alarm_end_time = #{item.alarmEndTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.handleStatus != null">
                    handle_status = #{item.handleStatus,jdbcType=TINYINT},
                </if>
                <if test="item.updateBy != null">
                    update_by = #{item.updateBy,jdbcType=VARCHAR},
                </if>
                <if test="item.updateTime != null">
                    update_time = #{item.updateTime,jdbcType=TIMESTAMP},
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <resultMap id = "faNumMap" type="com.mailian.firecontrol.dao.manual.model.FaNumGySystem">
        <result column="fa_system_id" jdbcType="TIMESTAMP" property="systemId" />
        <result column="faNum" jdbcType="INTEGER" property="faNum" />
    </resultMap>

    <select id="countFaNumGySystem" parameterType="java.util.List" resultMap="faNumMap">
        SELECT
          fa_system_id,COUNT(*) AS faNum
        FROM t_facilities
        <where>
            <if test="unitIds != null and unitIds.size() > 0">
                and unit_id in
                <foreach close=")" collection="unitIds" index="i" item="item" open="(" separator=",">
                    #{item,jdbcType=INTEGER}
                </foreach>
            </if>
        </where>
        GROUP BY fa_system_id;
    </select>

    <resultMap id = "DiagramItemResultMap" type="com.mailian.firecontrol.dto.DiagramItemDto">
        <result column="item_id" jdbcType="VARCHAR" property="itemId" />
        <result column="item_type" jdbcType="INTEGER" property="itemType" />
        <result column="struct_type" jdbcType="VARCHAR" property="structType" />
        <result column="struct_name" jdbcType="VARCHAR" property="structName" />
        <result column="ds_id" jdbcType="INTEGER" property="dsId" />
    </resultMap>

    <select id="selectDiagramItemByUnitIdAndType" resultMap="DiagramItemResultMap">
        select i.item_id,i.item_type,s.struct_type,s.struct_name,i.ds_id from t_diagram_item i,t_diagram_struct s where i.ds_id=s.id and s.unit_id=#{unitId,jdbcType=INTEGER} and s.struct_type=#{type,jdbcType=INTEGER}
    </select>


</mapper>