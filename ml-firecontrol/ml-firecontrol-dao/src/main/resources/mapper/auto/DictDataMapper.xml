<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mailian.firecontrol.dao.auto.mapper.DictDataMapper">
  <resultMap id="BaseResultMap" type="com.mailian.firecontrol.dao.auto.model.DictData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dict_sort" jdbcType="INTEGER" property="dictSort" />
    <result column="dict_label" jdbcType="VARCHAR" property="dictLabel" />
    <result column="dict_value" jdbcType="VARCHAR" property="dictValue" />
    <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
    <result column="dict_rank" jdbcType="INTEGER" property="dictRank" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="is_default" jdbcType="INTEGER" property="isDefault" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dict_sort, dict_label, dict_value, dict_type, dict_rank, parent_id, is_default, 
    status, create_by, create_time, update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_dict_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_dict_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mailian.firecontrol.dao.auto.model.DictData">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sys_dict_data (dict_sort, dict_label, dict_value, 
      dict_type, dict_rank, parent_id, 
      is_default, status, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{dictSort,jdbcType=INTEGER}, #{dictLabel,jdbcType=VARCHAR}, #{dictValue,jdbcType=VARCHAR}, 
      #{dictType,jdbcType=VARCHAR}, #{dictRank,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{isDefault,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mailian.firecontrol.dao.auto.model.DictData">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sys_dict_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictSort != null">
        dict_sort,
      </if>
      <if test="dictLabel != null">
        dict_label,
      </if>
      <if test="dictValue != null">
        dict_value,
      </if>
      <if test="dictType != null">
        dict_type,
      </if>
      <if test="dictRank != null">
        dict_rank,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictSort != null">
        #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictLabel != null">
        #{dictLabel,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictRank != null">
        #{dictRank,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mailian.firecontrol.dao.auto.model.DictData">
    update t_sys_dict_data
    <set>
      <if test="dictSort != null">
        dict_sort = #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictLabel != null">
        dict_label = #{dictLabel,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        dict_type = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictRank != null">
        dict_rank = #{dictRank,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mailian.firecontrol.dao.auto.model.DictData">
    update t_sys_dict_data
    set dict_sort = #{dictSort,jdbcType=INTEGER},
      dict_label = #{dictLabel,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_type = #{dictType,jdbcType=VARCHAR},
      dict_rank = #{dictRank,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      is_default = #{isDefault,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByMap" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_dict_data
    <where>
      <if test="dictSort != null">
         and dict_sort = #{dictSort,jdbcType=INTEGER}
      </if>
      <if test="dictLabel != null">
         and dict_label = #{dictLabel,jdbcType=VARCHAR}
      </if>
      <if test="dictValue != null">
         and dict_value = #{dictValue,jdbcType=VARCHAR}
      </if>
      <if test="dictType != null">
         and dict_type = #{dictType,jdbcType=VARCHAR}
      </if>
      <if test="dictRank != null">
         and dict_rank = #{dictRank,jdbcType=INTEGER}
      </if>
      <if test="parentId != null">
         and parent_id = #{parentId,jdbcType=INTEGER}
      </if>
      <if test="isDefault != null">
         and is_default = #{isDefault,jdbcType=INTEGER}
      </if>
      <if test="status != null">
         and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="createBy != null">
         and create_by = #{createBy,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null">
         and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null">
         and update_by = #{updateBy,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null">
         and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="remark != null">
         and remark = #{remark,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <delete id="deleteBatchIds" parameterType="java.util.List">
    delete from t_sys_dict_data
    where id in 
    <foreach close=")" collection="ids" index="i" item="item" open="(" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>
  <select id="selectBatchIds" parameterType="java.util.Collection" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_dict_data
    where id in 
    <foreach close=")" collection="ids" index="i" item="item" open="(" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
  </select>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into t_sys_dict_data (dict_sort, dict_label, dict_value, 
      dict_type, dict_rank, parent_id, 
      is_default, status, create_by, 
      create_time, update_by, update_time, 
      remark) values 
    <foreach collection="objs" index="index" item="item" separator=",">
       (#{item.dictSort,jdbcType=INTEGER}, #{item.dictLabel,jdbcType=VARCHAR}, #{item.dictValue,jdbcType=VARCHAR}, 
        #{item.dictType,jdbcType=VARCHAR}, #{item.dictRank,jdbcType=INTEGER}, #{item.parentId,jdbcType=INTEGER}, 
        #{item.isDefault,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>