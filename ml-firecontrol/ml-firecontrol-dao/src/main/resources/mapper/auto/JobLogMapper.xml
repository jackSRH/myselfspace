<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mailian.firecontrol.dao.auto.mapper.JobLogMapper">
  <resultMap id="BaseResultMap" type="com.mailian.firecontrol.dao.auto.model.JobLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="job_message" jdbcType="VARCHAR" property="jobMessage" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mailian.firecontrol.dao.auto.model.JobLog">
    <result column="exception_info" jdbcType="LONGVARCHAR" property="exceptionInfo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_name, job_group, method_name, params, job_message, status, create_time
  </sql>
  <sql id="Blob_Column_List">
    exception_info
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_job_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_job_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mailian.firecontrol.dao.auto.model.JobLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sys_job_log (job_name, job_group, method_name, 
      params, job_message, status, 
      create_time, exception_info)
    values (#{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{jobMessage,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{exceptionInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mailian.firecontrol.dao.auto.model.JobLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_sys_job_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobGroup != null">
        job_group,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="jobMessage != null">
        job_message,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="exceptionInfo != null">
        exception_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="jobMessage != null">
        #{jobMessage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceptionInfo != null">
        #{exceptionInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mailian.firecontrol.dao.auto.model.JobLog">
    update t_sys_job_log
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="jobMessage != null">
        job_message = #{jobMessage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceptionInfo != null">
        exception_info = #{exceptionInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mailian.firecontrol.dao.auto.model.JobLog">
    update t_sys_job_log
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      job_message = #{jobMessage,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      exception_info = #{exceptionInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mailian.firecontrol.dao.auto.model.JobLog">
    update t_sys_job_log
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      job_message = #{jobMessage,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByMap" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_job_log
    <where>
      <if test="jobName != null">
         and job_name = #{jobName,jdbcType=VARCHAR}
      </if>
      <if test="jobGroup != null">
         and job_group = #{jobGroup,jdbcType=VARCHAR}
      </if>
      <if test="methodName != null">
         and method_name = #{methodName,jdbcType=VARCHAR}
      </if>
      <if test="params != null">
         and params = #{params,jdbcType=VARCHAR}
      </if>
      <if test="jobMessage != null">
         and job_message = #{jobMessage,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
         and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
         and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="exceptionInfo != null">
         and exception_info = #{exceptionInfo,jdbcType=LONGVARCHAR}
      </if>
    </where>
  </select>
  <delete id="deleteBatchIds" parameterType="java.util.List">
    delete from t_sys_job_log
    where id in 
    <foreach close=")" collection="ids" index="i" item="item" open="(" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>
  <select id="selectBatchIds" parameterType="java.util.Collection" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sys_job_log
    where id in 
    <foreach close=")" collection="ids" index="i" item="item" open="(" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
  </select>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into t_sys_job_log (job_name, job_group, method_name, 
      params, job_message, status, 
      create_time, exception_info
      ) values 
    <foreach collection="objs" index="index" item="item" separator=",">
       (#{item.jobName,jdbcType=VARCHAR}, #{item.jobGroup,jdbcType=VARCHAR}, #{item.methodName,jdbcType=VARCHAR}, 
        #{item.params,jdbcType=VARCHAR}, #{item.jobMessage,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.exceptionInfo,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
</mapper>